{"version":3,"sources":["images/restaurant-position-marker.png","images/logo.png","images/user-position-marker.png","components/Header.js","components/AddReviews.js","components/RestaurantImage.js","components/RestaurantBox.js","components/RestaurantsList.js","components/ExtraRestaurants.js","components/RestaurantsMap.js","utils/MAPBOX_TOKEN.js","components/FilterRestaurants.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","alt","src","logo","width","height","AddReviews","useState","stars","setStars","review","setReview","fullReview","setFullReview","Fragment","map","id","text","star","key","rating","Number","total","interactive","onChange","event","target","value","type","placeholder","onClick","concat","Math","random","RestaurantImage","props","imgRef","imageRef","imgURL","setImgURL","useEffect","axios","get","process","then","res","request","responseURL","catch","err","console","log","RestaurantBox","boxData","data","boxGplaces","gplaces","restaurantBoxGplaces","restaurant","name","photos","photo_reference","user_ratings_total","restaurantBoxData","restaurantName","image","ratings","feedback","filteredRestaurants","filter","fromStars","toStars","filteredRestaurant","filteredGrestaurants","filteredGrestaurant","userNewPlaces","img","userNewFilteredPlaces","RestaurantsList","role","aria-label","ExtraRestaurants","restaurantPlaces","selectedRestaurant","setSelectedRestaurant","allMarkers","place","latitude","geometry","location","lat","longitude","lng","e","preventDefault","restaurant_marker","filteredMarkers","onClose","RestaurantsMap","restaurantsData","zoom","viewport","setViewPort","selectedNewRestaurant","setSelectedNewRestaurant","long","restaurant_position_marker","userMarkers","userFilteredMarkers","mapboxApiAccessToken","mapStyle","onViewportChange","transitionDuration","dragPan","doubleClickZoom","onDblClick","_handleClick","user_position_marker","FilterRestaurants","setFromStars","setToStars","setUserNewPlaces","lngLat","prompt","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8554b0dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/restaurant-position-marker.4c717ae9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e6c189c5.png\";","module.exports = __webpack_public_path__ + \"static/media/user-position-marker.972bdb89.png\";","import React from \"react\";\nimport logo from \"../images/logo.png\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <header>\n        <img\n          alt=\"app-logo\"\n          src={logo}\n          width=\"70\"\n          height=\"70\"\n          className=\"app-logo\"\n        />\n        <h1>Restaurant Reviews</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport Rater from \"react-rater\";\nimport \"react-rater/lib/react-rater.css\";\nimport \"./AddReviews.css\";\n\nfunction AddReviews() {\n  const [stars, setStars] = useState(0);\n  const [review, setReview] = useState(\"\");\n  const [fullReview, setFullReview] = useState([]);\n\n  function getStars(event) {\n    setStars(Number(event.target.value));\n  }\n\n  function getReview(event) {\n    setReview(event.target.value);\n  }\n\n  function addReview() {\n    setFullReview(fullReview =>\n      fullReview.concat({\n        text: review,\n        star: stars,\n        id: Math.random() * 100\n      })\n    );\n    setReview(\"\");\n    setStars(0);\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"review\">\n        {fullReview.map(({ id, text, star }) => (\n          <ul key={id}>\n            <li>\n              <Rater rating={Number(star)} total={5} interactive={false} />\n            </li>\n            <li>\n              <span>Feedback: {text}</span>\n            </li>\n          </ul>\n        ))}\n\n        <select onChange={getStars} className=\"select-stars\" value={stars}>\n          <option value=\"0\">✰✰✰✰✰</option>\n          <option value=\"1\">⭐✰✰✰✰</option>\n          <option value=\"2\">⭐⭐✰✰✰</option>\n          <option value=\"3\">⭐⭐⭐✰✰</option>\n          <option value=\"4\">⭐⭐⭐⭐✰</option>\n          <option value=\"5\">⭐⭐⭐⭐⭐</option>\n        </select>\n        <input\n          type=\"text\"\n          onChange={getReview}\n          className=\"input-text\"\n          placeholder=\"leave a review\"\n          value={review}\n        />\n        <button onClick={addReview} className=\"submit-review\">\n          {\" \"}\n          Submit a review\n        </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default AddReviews;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst GKEY = process.env.REACT_APP_HELPER_KEY;\n\nfunction RestaurantImage(props) {\n  const imgRef = props.imageRef;\n  const [imgURL, setImgURL] = useState(\"\");\n  useEffect(() => {\n    axios\n      .get(\n        `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${imgRef}&key=${GKEY}`\n      )\n      .then(res => {\n        setImgURL(res.request.responseURL);\n        //console.log(res.request.responseURL);\n      })\n      .catch(err => {\n        console.log(\"ERROR HAS OCURED\" + err);\n      });\n  }, []);\n  return <img src={imgURL} alt=\"restaurant-pic\" />;\n}\n\nexport default RestaurantImage;\n","import React from \"react\";\nimport Rater from \"react-rater\";\nimport \"react-rater/lib/react-rater.css\";\nimport \"./RestaurantBox.css\";\nimport AddReviews from \"./AddReviews\";\nimport RestaurantImage from \"./RestaurantImage\";\n\nfunction RestaurantBox(props) {\n  const boxData = props.data;\n  const boxGplaces = props.gplaces;\n\n  const restaurantBoxGplaces = boxGplaces.map(restaurant => {\n    return (\n      <div key={restaurant.id} className=\"section\">\n        <h3 className=\"restaurant-title\">{restaurant.name}</h3>\n        <div className=\"rest-box\">\n          <div className=\"box-image\">\n            <RestaurantImage imageRef={restaurant.photos[0].photo_reference} />\n          </div>\n          <div className=\"rate-section\">\n            <ul>\n              <li>\n                {\" \"}\n                <Rater\n                  rating={restaurant.rating}\n                  total={5}\n                  interactive={false}\n                />{\" \"}\n              </li>\n              <li>User Reatings Total: {restaurant.user_ratings_total}</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"add-reviews\">\n          <AddReviews />\n        </div>\n      </div>\n    );\n  });\n\n  const restaurantBoxData = boxData.map(restaurant => {\n    return (\n      <div key={restaurant.id} className=\"section\">\n        <h3 className=\"restaurant-title\">{restaurant.restaurantName}</h3>\n        <div className=\"box-image\">\n          <img src={restaurant.image} alt=\"restaurant-pic\" />\n        </div>\n        <div className=\"rate-section\">\n          <ul>\n            <li>\n              {\" \"}\n              <Rater\n                rating={restaurant.ratings}\n                total={5}\n                interactive={false}\n              />{\" \"}\n            </li>\n            <li>Feedback: {restaurant.feedback}</li>\n          </ul>\n        </div>\n\n        <div className=\"add-reviews\">\n          <AddReviews />\n        </div>\n      </div>\n    );\n  });\n\n  const filteredRestaurants = boxData\n    .filter(\n      restaurant =>\n        (restaurant.ratings >= props.fromStars) &\n        (restaurant.ratings <= props.toStars)\n    )\n    .map(filteredRestaurant => (\n      <div key={filteredRestaurant.id} className=\"section\">\n        <h3 className=\"restaurant-title\">\n          {filteredRestaurant.restaurantName}\n        </h3>\n        <div className=\"box-image\">\n          <img src={filteredRestaurant.image} alt=\"restaurant-pic\" />\n        </div>\n        <div className=\"rate-section\">\n          <ul>\n            <li>\n              {\" \"}\n              <Rater\n                rating={filteredRestaurant.ratings}\n                total={5}\n                interactive={false}\n              />{\" \"}\n            </li>\n            <li>Feedback: {filteredRestaurant.feedback}</li>\n          </ul>\n        </div>\n        <div className=\"add-reviews\">\n          <AddReviews />\n        </div>\n      </div>\n    ));\n\n  const filteredGrestaurants = boxGplaces\n    .filter(\n      restaurant =>\n        (restaurant.rating >= props.fromStars) &\n        (restaurant.rating <= props.toStars)\n    )\n    .map(filteredGrestaurant => (\n      <div key={filteredGrestaurant.id} className=\"section\">\n        <h3 className=\"restaurant-title\">{filteredGrestaurant.name}</h3>\n        <div className=\"box-image\">\n          <RestaurantImage\n            imageRef={filteredGrestaurant.photos[0].photo_reference}\n          />\n        </div>\n        <div className=\"rate-section\">\n          <ul>\n            <li>\n              {\" \"}\n              <Rater\n                rating={filteredGrestaurant.rating}\n                total={5}\n                interactive={false}\n              />{\" \"}\n            </li>\n            <li>\n              User Ratings Total: {filteredGrestaurant.user_ratings_total}\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"add-reviews\">\n          <AddReviews />\n        </div>\n      </div>\n    ));\n  const userNewPlaces = props.userNewPlaces.map(restaurant => {\n    return (\n      <div key={restaurant.id} className=\"section\">\n        <h3 className=\"restaurant-title\">{restaurant.name}</h3>\n        <div className=\"box-image\">\n          <img src={restaurant.img} alt=\"restaurant-pic\" />\n        </div>\n        <div className=\"rate-section\">\n          <ul>\n            <li>\n              {\" \"}\n              <Rater\n                rating={restaurant.review}\n                total={5}\n                interactive={false}\n              />{\" \"}\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"add-reviews\">\n          <AddReviews />\n        </div>\n      </div>\n    );\n  });\n\n  const userNewFilteredPlaces = props.userNewPlaces\n    .filter(\n      restaurant =>\n        (restaurant.review >= props.fromStars) &\n        (restaurant.review <= props.toStars)\n    )\n    .map(filteredRestaurant => (\n      <div key={filteredRestaurant.id} className=\"section\">\n        <h3 className=\"restaurant-title\">{filteredRestaurant.name}</h3>\n        <div className=\"box-image\">\n          <img src={filteredRestaurant.img} alt=\"restaurant-pic\" />\n        </div>\n        <div className=\"rate-section\">\n          <ul>\n            <li>\n              {\" \"}\n              <Rater\n                rating={filteredRestaurant.review}\n                total={5}\n                interactive={false}\n              />{\" \"}\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"add-reviews\">\n          <AddReviews />\n        </div>\n      </div>\n    ));\n  return (\n    <React.Fragment>\n      <div className=\"sublist\">\n        <div>\n          {(props.fromStars === 0) & (props.toStars === 0)\n            ? restaurantBoxData\n            : filteredRestaurants}\n        </div>\n        <div>\n          {(props.fromStars === 0) & (props.toStars === 0)\n            ? restaurantBoxGplaces\n            : filteredGrestaurants}\n        </div>\n        <div>\n          {(props.fromStars === 0) & (props.toStars === 0)\n            ? userNewPlaces\n            : userNewFilteredPlaces}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nexport default RestaurantBox;\n","import React from \"react\";\nimport \"./RestaurantsList.css\";\nimport RestaurantBox from \"./RestaurantBox\";\n\nfunction RestaurantsList(props) {\n  return (\n    <div className=\"list\">\n      <h2>\n        <span role=\"img\" aria-label=\"food emoji\">\n          🥞🍛\n        </span>{\" \"}\n        Restaurants List{\" \"}\n        <span role=\"img\" aria-label=\"food emoji\">\n          🍝🍲\n        </span>\n      </h2>\n      <RestaurantBox\n        data={props.data}\n        gplaces={props.gplaces}\n        fromStars={props.fromStars}\n        toStars={props.toStars}\n        userNewPlaces={props.userNewPlaces}\n      />\n    </div>\n  );\n}\n\nexport default RestaurantsList;\n","import React, { useState } from \"react\";\nimport Rater from \"react-rater\";\nimport { Marker, Popup } from \"react-map-gl\";\nimport \"./ExtraRestaurants.css\";\nimport restaurant_marker from \"../images/restaurant-position-marker.png\";\nimport RestaurantImage from \"./RestaurantImage\";\n\nfunction ExtraRestaurants(props) {\n  const restaurantPlaces = props.gplaces;\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  const allMarkers = restaurantPlaces.map(place => (\n    <Marker\n      key={place.id}\n      latitude={place.geometry.location.lat}\n      longitude={place.geometry.location.lng}\n    >\n      <button\n        className=\"marker\"\n        onClick={e => {\n          e.preventDefault();\n          setSelectedRestaurant(place);\n        }}\n      >\n        <img src={restaurant_marker} alt=\"restaurant marker\" />\n      </button>\n    </Marker>\n  ));\n\n  const filteredMarkers = restaurantPlaces\n    .filter(\n      restaurant =>\n        (restaurant.rating >= props.fromStars) &\n        (restaurant.rating <= props.toStars)\n    )\n    .map(filteredRestaurant => (\n      <Marker\n        key={filteredRestaurant.id}\n        latitude={filteredRestaurant.geometry.location.lat}\n        longitude={filteredRestaurant.geometry.location.lng}\n      >\n        <button\n          className=\"marker\"\n          onClick={e => {\n            e.preventDefault();\n            setSelectedRestaurant(filteredRestaurant);\n          }}\n        >\n          <img src={restaurant_marker} alt=\"restaurant marker\" />\n        </button>\n      </Marker>\n    ));\n\n  return (\n    <div>\n      {(props.fromStars === 0) & (props.toStars === 0)\n        ? allMarkers\n        : filteredMarkers}\n\n      {selectedRestaurant ? (\n        <Popup\n          latitude={selectedRestaurant.geometry.location.lat}\n          longitude={selectedRestaurant.geometry.location.lng}\n          onClose={() => {\n            setSelectedRestaurant(null);\n          }}\n        >\n          <div>\n            <h3 className=\"restaurant-title\">{selectedRestaurant.name}</h3>\n            <p className=\"rest-rate\">\n              Review:{\" \"}\n              <Rater\n                rating={selectedRestaurant.rating}\n                total={5}\n                interactive={false}\n              />{\" \"}\n            </p>\n            <div className=\"restaurant-image\">\n              <RestaurantImage\n                imageRef={selectedRestaurant.photos[0].photo_reference}\n              />\n            </div>\n          </div>\n        </Popup>\n      ) : null}\n    </div>\n  );\n}\n\nexport default ExtraRestaurants;\n","import React, { useState } from \"react\";\nimport Rater from \"react-rater\";\nimport InteractiveMap, { Marker, Popup } from \"react-map-gl\";\nimport { MAPBOX_TOKEN } from \"../utils/MAPBOX_TOKEN\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./RestaurantsMap.css\";\nimport ExtraRestaurants from \"./ExtraRestaurants\";\nimport user_position_marker from \"../images/user-position-marker.png\";\nimport restaurant_position_marker from \"../images/restaurant-position-marker.png\";\n\nconst TOKEN = MAPBOX_TOKEN;\n\nfunction RestaurantsMap(props) {\n  const restaurantsData = props.data;\n\n  const [viewport, setViewPort] = useState({\n    width: \"100%\",\n    height: 830,\n    latitude: 30.7970511,\n    longitude: 30.9987288,\n    zoom: 14\n  });\n\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [selectedNewRestaurant, setSelectedNewRestaurant] = useState(null);\n\n  const _onViewportChange = viewport => {\n    setViewPort({ ...viewport, transitionDuration: 3000 });\n  };\n\n  const allMarkers = restaurantsData.map(restaurant => (\n    <Marker\n      key={restaurant.id}\n      latitude={restaurant.lat}\n      longitude={restaurant.long}\n    >\n      <button\n        className=\"marker\"\n        onClick={e => {\n          e.preventDefault();\n          setSelectedRestaurant(restaurant);\n        }}\n      >\n        <img src={restaurant_position_marker} alt=\"user-position-marker\" />\n      </button>\n    </Marker>\n  ));\n\n  const filteredMarkers = restaurantsData\n    .filter(\n      restaurant =>\n        (restaurant.ratings >= props.fromStars) &\n        (restaurant.ratings <= props.toStars)\n    )\n    .map(filteredRestaurant => (\n      <Marker\n        key={filteredRestaurant.id}\n        latitude={filteredRestaurant.lat}\n        longitude={filteredRestaurant.long}\n      >\n        <button\n          className=\"marker\"\n          onClick={e => {\n            e.preventDefault();\n            setSelectedRestaurant(filteredRestaurant);\n          }}\n        >\n          <img src={restaurant_position_marker} alt=\"user-position-marker\" />\n        </button>\n      </Marker>\n    ));\n\n  const userMarkers = props.userNewPlaces.map(place => (\n    <Marker\n      key={place.id}\n      latitude={place.location[1]}\n      longitude={place.location[0]}\n    >\n      <button\n        className=\"marker\"\n        onClick={e => {\n          e.preventDefault();\n          setSelectedNewRestaurant(place);\n        }}\n      >\n        <img\n          src={restaurant_position_marker}\n          alt=\"restaurant-position-marker\"\n        />\n      </button>\n    </Marker>\n  ));\n\n  const userFilteredMarkers = props.userNewPlaces\n    .filter(\n      restaurant =>\n        (restaurant.review >= props.fromStars) &\n        (restaurant.review <= props.toStars)\n    )\n    .map(filteredRestaurant => (\n      <Marker\n        key={filteredRestaurant.id}\n        latitude={filteredRestaurant.location[1]}\n        longitude={filteredRestaurant.location[0]}\n      >\n        <button\n          className=\"marker\"\n          onClick={e => {\n            e.preventDefault();\n            setSelectedNewRestaurant(filteredRestaurant);\n          }}\n        >\n          <img src={restaurant_position_marker} alt=\"rest-position-marker\" />\n        </button>\n      </Marker>\n    ));\n\n  return (\n    <div className=\"map\">\n      <InteractiveMap\n        {...viewport}\n        mapboxApiAccessToken={TOKEN}\n        mapStyle=\"mapbox://styles/mapbox/dark-v8\"\n        onViewportChange={_onViewportChange}\n        dragPan={false}\n        doubleClickZoom={false}\n        onDblClick={props._handleClick}\n      >\n        <Marker latitude={30.7970511} longitude={30.9987288}>\n          <button className=\"marker\">\n            <img src={user_position_marker} alt=\"user-position-marker\" />\n          </button>\n        </Marker>\n\n        {(props.fromStars === 0) & (props.toStars === 0)\n          ? allMarkers\n          : filteredMarkers}\n\n        {(props.fromStars === 0) & (props.toStars === 0)\n          ? userMarkers\n          : userFilteredMarkers}\n\n        {selectedNewRestaurant ? (\n          <Popup\n            latitude={selectedNewRestaurant.location[1]}\n            longitude={selectedNewRestaurant.location[0]}\n            onClose={() => {\n              setSelectedNewRestaurant(null);\n            }}\n          >\n            <div className=\"popup-card\">\n              <h3 className=\"rest-name\">{selectedNewRestaurant.name}</h3>\n              <p className=\"rest-rate\">\n                Rating:{\" \"}\n                <Rater\n                  rating={Number(selectedNewRestaurant.review)}\n                  total={5}\n                  interactive={false}\n                />{\" \"}\n              </p>\n              <img\n                className=\"restaurant-image\"\n                src={selectedNewRestaurant.img}\n                alt=\"restaurant-pic\"\n              />\n            </div>\n          </Popup>\n        ) : null}\n\n        {selectedRestaurant ? (\n          <Popup\n            latitude={selectedRestaurant.lat}\n            longitude={selectedRestaurant.long}\n            onClose={() => {\n              setSelectedRestaurant(null);\n            }}\n          >\n            <div className=\"popup-card\">\n              <h3 className=\"rest-name\">{selectedRestaurant.restaurantName}</h3>\n              <p className=\"rest-rate\">\n                Rating:{\" \"}\n                <Rater\n                  rating={selectedRestaurant.ratings}\n                  total={5}\n                  interactive={false}\n                />{\" \"}\n              </p>\n              <img\n                className=\"restaurant-image\"\n                src={selectedRestaurant.image}\n                alt=\"restaurant-pic\"\n              />\n            </div>\n          </Popup>\n        ) : null}\n        <ExtraRestaurants\n          gplaces={props.gplaces}\n          fromStars={props.fromStars}\n          toStars={props.toStars}\n        />\n      </InteractiveMap>\n    </div>\n  );\n}\n\nexport default RestaurantsMap;\n","export const MAPBOX_TOKEN =  'pk.eyJ1IjoibW9oYW1lZHNnYXAiLCJhIjoiY2p2NWNpc2liMHJ1MzN5cDJ3dmFsbTI1aSJ9.s59PBCspitI9M_EHQ0hgeg'\n","import React, { useState } from \"react\";\nimport RestaurantsList from \"./RestaurantsList\";\nimport RestaurantsMap from \"./RestaurantsMap\";\nimport \"./FilterRestaurants.css\";\n\nconst FilterRestaurants = props => {\n  const [fromStars, setFromStars] = useState(0);\n  const [toStars, setToStars] = useState(0);\n  const [userNewPlaces, setUserNewPlaces] = useState([]);\n\n  const handleClick = e => {\n    setUserNewPlaces(userNewPlaces =>\n      userNewPlaces.concat({\n        location: e.lngLat,\n        name: prompt(\"Enter the new restaurant name!\"),\n        review: prompt(\"give a review number form 1 to 5 \"),\n        img: prompt(\"Enter restaurant image URL!\"),\n        id: Math.random() * 100\n      })\n    );\n  };\n\n  const getFromStars = event => {\n    setFromStars(Number(event.target.value));\n  };\n\n  const getToStars = event => {\n    setToStars(Number(event.target.value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"filter-feature\">\n        <label className=\"label-data\">\n          Filter the restaurants based on your favorite reviews stars\n        </label>\n        <select\n          className=\"select-from\"\n          value={fromStars}\n          onChange={getFromStars}\n        >\n          <option value=\"0\">From</option>\n          <option value=\"1\">⭐✰✰✰✰</option>\n          <option value=\"2\">⭐⭐✰✰✰</option>\n          <option value=\"3\">⭐⭐⭐✰✰</option>\n          <option value=\"4\">⭐⭐⭐⭐✰</option>\n          <option value=\"5\">⭐⭐⭐⭐⭐</option>\n        </select>\n        <select className=\"select-to\" value={toStars} onChange={getToStars}>\n          <option value=\"0\">To</option>\n          <option value=\"1\">⭐✰✰✰✰</option>\n          <option value=\"2\">⭐⭐✰✰✰</option>\n          <option value=\"3\">⭐⭐⭐✰✰</option>\n          <option value=\"4\">⭐⭐⭐⭐✰</option>\n          <option value=\"5\">⭐⭐⭐⭐⭐</option>\n        </select>\n      </div>\n      <div className=\"main-view\">\n        <div className=\"restaurants-map\">\n          <RestaurantsMap\n            data={props.data}\n            gplaces={props.gplaces}\n            fromStars={fromStars}\n            toStars={toStars}\n            userNewPlaces={userNewPlaces}\n            _handleClick={handleClick}\n          />\n        </div>\n        <div className=\"restaurants-list\">\n          <RestaurantsList\n            data={props.data}\n            gplaces={props.gplaces}\n            fromStars={fromStars}\n            toStars={toStars}\n            userNewPlaces={userNewPlaces}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FilterRestaurants;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport data from \"./utils/restaurantsInfo.json\";\nimport FilterRestaurants from \"./components/FilterRestaurants\";\n\n/*\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n*/\nconst GKEY_ID = process.env.REACT_APP_HELPER_KEY;\n\n// https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-33.8670522,151.1957362&radius=1500&type=restaurant&keyword=cruise&key=YOUR_API_KEY\n\nfunction App() {\n  const [gplaces, setGplaces] = useState([]);\n  /*\n  //  API call for G_Places\n  useEffect(() => {\n    axios\n      .get(\n        `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=30.7970511,30.9987288&radius=1500&type=restaurant&keyword=cruise&key=${GKEY_ID}`\n      )\n      .then(res => {\n        setGplaces(res.data.results);\n      })\n      .catch(err => {\n        console.log(\"ERROR HAS OCURED\" + err);\n      });\n  }, []);\n*/\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <FilterRestaurants data={data} gplaces={gplaces} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}